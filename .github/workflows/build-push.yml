name: build-push
run-name: ${{ github.event.commits.message }}

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
  
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  variables:
    name: Variables
    timeout-minutes: 3
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Create file
        run: |
          echo "::group::Create file"
          touch ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}

      - name: Set variables
        run: |
          echo "::group::Environment Variables"
          echo "DLRS_NAME=${{ github.event.repository.name }}" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_VERSION=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g' | awk -F'-' '{print $1}' | sed 's/[^0-9.]*//g')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_REPOSITORY=${{ github.repository }}">> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_BRANCH=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_TAG=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_SUFFIX=$( echo $(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g') | awk -F'-' '{print $2}')" >> ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
          DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}

      - name: List variables
        run: |
          echo "::group::Create file"
          cat ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}

      - name: Upload file
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.DLRS_ENV_FILE}}
          path: ${{env.DLRS_ENV_FILE}}
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
  
  build-push:
    name: Build and Push
    needs: variables
    timeout-minutes: 3
    runs-on: ubuntu-latest
       
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0
              
      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ format('{0}-env.json',github.event.repository.name) }}
                        
      - name: Create buildx builder
        uses: dolorestec/devops/.github/actions/docker/buildx/create@develop
        with:
          name: ${{ env.DLRS_NAME }}
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}
                    
      - name: Login to ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/login@develop
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          token: ${{ env.TOKEN }}
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}
                
      - name: Build image
        uses: dolorestec/devops/.github/actions/docker/buildx/build@develop
        with:
          image: "ghcr.io/${{ env.DLRS_REPOSITORY }}"
          tag: ${{ env.DLRS_TAG }}
          context: .
          dockerfile: Dockerfile
          push: true
        env:
          DLRS_REPOSITORY: ${{ env.DLRS_REPOSITORY }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
                    
      - name: Logout from ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/logout@develop
        with:
          registry: ${{ env.REGISTRY }}
        env:
          REGISTRY: ghcr.io