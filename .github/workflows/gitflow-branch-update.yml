name: update-version
run-name: ${{ github.workflow.workflow.commits[0].message }}

on:
  workflow_run:
    workflows: ["release-branch"]
    branches:
      - develop
      - main
    types:
      - completed

jobs:
  variables:
    name: Variables
    if: github.event.workflow_run.conclusion == 'success'
    timeout-minutes: 3
    runs-on: ubuntu-latest
    env:
      DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
      DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}
    
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Create file
        run: |
          echo "::group::Create file"
          touch ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"

      - name: Set Variables
        id: setup
        run: |
          echo "::group::Environment Variables"
          echo "DLRS_NAME=${{ github.event.repository.name }}" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_VERSION=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g' | awk -F'-' '{print $1}' | sed 's/[^0-9.]*//g')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_REPOSITORY=${{ github.repository }}">> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_BRANCH=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_TAG=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_SUFFIX=$( echo $(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g') | awk -F'-' '{print $2}')" >> ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"

      - name: Create file
        run: |
          echo "::group::Create file"
          cat ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"

      - name: Upload file
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.DLRS_ENV_FILE}}
          path: ${{env.DLRS_ENV_FILE}}

  versioning:
    name: Versioning
    needs: variables
    timeout-minutes: 3
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name}}
          fetch-depth: 0

      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ format('{0}-env.json',github.event.repository.name) }}

      - name: Versioning
        id: versioning
        uses: dolorestec/devops/.github/actions/versions@develop
        with:
          branch: ${{ env.DLRS_BRANCH }}
          tag: ${{ env.DLRS_TAG }}
          version: ${{ env.DLRS_VERSION }}
          major: ${{ env.DLRS_MAJOR }}
          minor: ${{ env.DLRS_MINOR }}
        env:
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
          DLRS_VERSION: ${{  env.DLRS_VERSION }}
          DLRS_MAJOR: ${{ github.ref_name == 'develop' && 'true' || 'false' }}
          DLRS_MINOR: ${{ github.ref_name == 'main' && 'true' || 'false' }}

      - name: Update version
        run: |
          echo "::group::Update version"
          
          git config --global user.email "${{ github.actor }}jpa@gmail.com"
          git config --global user.name ${{ github.actor }}

          echo "Update version ${{ env.DLRS_TAG}} to ${{ env.DLRS_NEW_TAG }}"
          sed -i "s/${{ env.DLRS_TAG }}/${{ env.DLRS_NEW_TAG }}/g" ${{ env.DLRS_VERSION_FILE }}

          echo "Commit changes"
          git add ${{ env.DLRS_VERSION_FILE }}
          git commit -m "[DLRS-CI] Update version ${{ env.DLRS_TAG}} to ${{ env.DLRS_NEW_TAG }}"

          echo "Push changes"
          git push origin ${{ env.DLRS_BRANCH }}
          echo "::endgroup::"
        env:
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
          DLRS_NEW_TAG: ${{ steps.versioning.outputs.tag }}
          DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}
