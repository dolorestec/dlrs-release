name: Push on [main,develop]
run-name: Push Workflow

on:
  workflow_dispatch:

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true


jobs:
  variables:
      name: Variables environment
      timeout-minutes: 3
      runs-on: ubuntu-latest
      
      steps:
        - name: Checkout
          uses: Actions/checkout@v3
          with:
            repository: ${{ github.repository }}
            ref: ${{ github.ref_name }}
            fetch-depth: 0

        - name: Set Variables
          id: setup
          run: |
            echo "::group::Environment Variables"
            echo "DLRS_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
            echo "DLRS_VERSION=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g' | awk -F'-' '{print $1}' | sed 's/[^0-9.]*//g')" >> $GITHUB_ENV
            echo "DLRS_REPOSITORY=${{ github.repository }}">> $GITHUB_ENV
            echo "DLRS_BRANCH=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')" >> $GITHUB_ENV
            echo "DLRS_TAG=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g')" >> $GITHUB_ENV
            echo "DLRS_SUFFIX=$( echo $(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g') | awk -F'-' '{print $2}')" >> $GITHUB_ENV
            echo "::endgroup::"
          env:
            DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}

        - name: Create file
          run: |
            echo "::group::Create file"
            touch ${{env.DLRS_ENV_FILE}}
            echo $(env | grep DLRS_) | xargs -I {} echo "{}" > ${{env.DLRS_ENV_FILE}}
          env:
            DLRS_ENV_FILE: ${{ format('{0}.env',github.event.repository.name) }}
  
        - name: Upload file
          uses: actions/upload-artifact@v3
          with:
            name: ${{ github.event.repository.name }}
            path: ${{env.DLRS_ENV_FILE}}
          env:
            DLRS_ENV_FILE: ${{ format('{0}.env',github.event.repository.name) }}

  publish:
    name: Publish
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: variables
     
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Load variables
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: ${{env.DLRS_ENV_FILE}}
        env:
          DLRS_ENV_FILE: ${{ format('{0}.env',github.event.repository.name) }}

      - name: Set Variables
        run: |
          echo "::group::Environment Variables"
          cat ${{env.DLRS_ENV_FILE}} | xargs -I {} echo "{}" >> $GITHUB_ENV
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}.env',github.event.repository.name) }}
      
      - name: Create buildx builder
        uses: dolorestec/devops/.github/actions/docker/buildx/create@develop
        with:
          name: ${{ env.DLRS_NAME }}
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}
  
      - name: Login to ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/login@develop
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          token: ${{ env.TOKEN }}
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}
  
      - name: Build image
        env:
          DLRS_REPOSITORY: ${{ env.DLRS_REPOSITORY }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
        uses: dolorestec/devops/.github/actions/docker/buildx/build@develop
        with:
          image: ${{ env.DLRS_REPOSITORY }}
          tag: ${{ env.DLRS_TAG }}
          context: .
          dockerfile: Dockerfile
          push: true
  
      - name: Logout from ghcr.io
        env:
          REGISTRY: ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/logout@develop
        with:
          registry: ${{ env.REGISTRY }}
  
  release:
    name: Release
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: publish
     
    steps:
      - name: Load variables
        id: variables
        uses: dolorestec/devops/.github/actions/variables/load@develop
        with:
          env_file: ${{ env.DLRS_ENV_FILE }}
        env:
          DLRS_ENV_FILE: ${{ format('{0}.env',github.event.repository.name) }}

      - name: Versioning
        id: versioning
        uses: dolorestec/devops/.github/actions/versions@develop
        with:
          branch: ${{ env.DLRS_BRANCH }}
          tag: ${{ env.DLRS_TAG }}
          version: ${{ env.DLRS_VERSION }}
          major: ${{ env.DLRS_MAJOR }}
          minor: ${{ env.DLRS_MINOR }}
        env:
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
          DLRS_VERSION: ${{ env.DLRS_VERSION }}
          DLRS_MAJOR: ${{ github.ref_name == 'develop' && 'true' || 'false' }}
          DLRS_MINOR: ${{ github.ref_name == 'main' && 'true' || 'false' }}

      - name: Create branch
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DRLS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}
          DLRS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
          DLRS_NEW_TAG: ${{ steps.versioning.outputs.tag }}
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "::group::Create branch"
          echo "Branch:${{ env.DLRS_BRANCH }} -> ${{ env.DRLS_NEW_BRANCH}}"
  
          git config --global user.email "${{ github.actor }}jpa@gmail.com"
          git config --global user.name ${{ github.actor }}
            
          git checkout -b ${{ env.DRLS_NEW_BRANCH}}
          git merge --no-ff ${{ env.DLRS_BRANCH }} -m "[CI] - Create branch ${{ env.DRLS_NEW_BRANCH }}"
          sed -i 's/${{env.DLRS_TAG}}/${{ env.DLRS_NEW_TAG }}/g' "${{ env.DLRS_NAME }}.json"
          git add "${{ env.DLRS_NAME }}.json"
          git commit -m "[CI] - Create branch ${{ env.DLRS_NEW_BRANCH }}"
          git branch -D ${{ env.DLRS_BRANCH }}
          git push origin ${{ env.DLRS_NEW_BRANCH }}
          echo "::endgroup::"