name: On Push [main, develop]
run-name: On Push

on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
  variables:
      name: Variables
      timeout-minutes: 3
      runs-on: ubuntu-latest

      outputs:
        DLRS_NAME: ${{ steps.outputs.outputs.DLRS_NAME }}
        DLRS_VERSION: ${{ steps.outputs.outputs.DLRS_VERSION }}
        DLRS_REPOSITORY: ${{ steps.outputs.outputs.DLRS_REPOSITORY }}
        DLRS_BRANCH: ${{ steps.outputs.outputs.DLRS_BRANCH }}
        DLRS_TAG: ${{ steps.outputs.outputs.DLRS_TAG }}
        DLRS_SUFFIX: ${{ steps.outputs.outputs.DLRS_SUFFIX }}
      
      steps:
        - name: Checkout
          uses: Actions/checkout@v3
          with:
            repository: ${{ github.repository }}
            ref: ${{ github.ref_name }}
            fetch-depth: 0

        - name: Create file
          run: |
            echo "::group::Create file"
            touch ${{env.DLRS_ENV_FILE}}
            echo "::endgroup::"
          env:
            DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}

        - name: Set variables
          run: |
            echo "::group::Environment Variables"
            echo "DLRS_NAME=${{ github.event.repository.name }}" >> ${{env.DLRS_ENV_FILE}}
            echo "DLRS_VERSION=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g' | awk -F'-' '{print $1}' | sed 's/[^0-9.]*//g')" >> ${{env.DLRS_ENV_FILE}}
            echo "DLRS_REPOSITORY=${{ github.repository }}">> ${{env.DLRS_ENV_FILE}}
            echo "DLRS_BRANCH=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')" >> ${{env.DLRS_ENV_FILE}}
            echo "DLRS_TAG=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g')" >> ${{env.DLRS_ENV_FILE}}
            echo "DLRS_SUFFIX=$( echo $(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g') | awk -F'-' '{print $2}')" >> ${{env.DLRS_ENV_FILE}}
            echo "::endgroup::"
          env:
            DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
            DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}

        - name: List variables
          run: |
            echo "::group::Create file"
            cat ${{env.DLRS_ENV_FILE}}
            echo "::endgroup::"
          env:
            DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
  
        - name: Upload file
          uses: actions/upload-artifact@v3
          with:
            name: ${{env.DLRS_ENV_FILE}}
            path: ${{env.DLRS_ENV_FILE}}
          env:
            DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}            

        - name: Set ouptputs
          id: outputs 
          run: |
            echo "::group::Set Outputs"
            echo "DLRS_NAME=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
            echo "DLRS_VERSION=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g' | awk -F'-' '{print $1}' | sed 's/[^0-9.]*//g')" >> $GITHUB_OUTPUT
            echo "DLRS_REPOSITORY=${{ github.repository }}">> $GITHUB_OUTPUT
            echo "DLRS_BRANCH=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')" >> $GITHUB_OUTPUT
            echo "DLRS_TAG=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g')" >> $GITHUB_OUTPUT
            echo "DLRS_SUFFIX=$( echo $(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g') | awk -F'-' '{print $2}')" >> $GITHUB_OUTPUT
            echo "::endgroup::"
          env:
            DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
            DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}
  
  build:
    name: Build
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: variables
    env:
      DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
               
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      
      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ env.DLRS_ENV_FILE }}
                
      - name: Create buildx builder
        uses: dolorestec/devops/.github/actions/docker/buildx/create@develop
        with:
          name: ${{ env.DLRS_NAME }}
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}
            
      - name: Login to ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/login@develop
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          token: ${{ env.TOKEN }}
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}
          
      - name: Build image
        env:
          DLRS_REPOSITORY: ${{ env.DLRS_REPOSITORY }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
        uses: dolorestec/devops/.github/actions/docker/buildx/build@develop
        with:
          image: "ghcr.io/${{ env.DLRS_REPOSITORY }}"
          tag: ${{ env.DLRS_TAG }}
          context: .
          dockerfile: Dockerfile
          push: true
            
      - name: Logout from ghcr.io
        env:
          REGISTRY: ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/logout@develop
        with:
          registry: ${{ env.REGISTRY }}
           
  branch:
    name: Branch
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: build
     
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ env.DLRS_BRANCH }}
          fetch-depth: 0
        env:
          DLRS_BRANCH: ${{ steps.variables.outputs.DLRS_BRANCH }}

      - name: Versioning
        id: versioning
        uses: dolorestec/devops/.github/actions/versions@develop
        with:
          branch: ${{ env.DLRS_BRANCH }}
          tag: ${{ env.DLRS_TAG }}
          version: ${{ env.DLRS_VERSION }}
          major: ${{ env.DLRS_MAJOR }}
          minor: ${{ env.DLRS_MINOR }}
        env:
          DLRS_BRANCH: ${{ needs.variables.outputs.DLRS_BRANCH }}
          DLRS_TAG: ${{ needs.variables.outputs.DLRS_TAG }}
          DLRS_VERSION: ${{ needs.variables.outputs.DLRS_VERSION }}
          DLRS_MAJOR: ${{ github.ref_name == 'develop' && 'true' || 'false' }}
          DLRS_MINOR: ${{ github.ref_name == 'main' && 'true' || 'false' }}

      - name: Create Branch
        run: |
          echo "::group::Create branch"
          echo "Create branch ${{ env.DLRS_NEW_BRANCH }}"
          git checkout ${{ env.DLRS_BRANCH }}
          git pull origin ${{ env.DLRS_BRANCH }}
          git checkout -b ${{ env.DLRS_NEW_BRANCH }}
          echo "Update version ${{ env.DLRS_TAG}} to ${{ env.DLRS_NEW_TAG }}"
          sed -i 's/${{env.DLRS_TAG}}/${{ env.DLRS_NEW_TAG }}/g' "${{ env.DLRS_NAME }}.json"
          git add "${{ env.DLRS_NAME }}.json" &> /dev/null
          git commit -m "[DLRS-CI] - Update version to ${{ env.DLRS_NEW_TAG }}" &> /dev/null
          git push origin ${{ env.DLRS_NEW_BRANCH }}
          echo "::endgroup::"
        env:
          DLRS_NAME: ${{ needs.variables.outputs.DLRS_NAME }}
          DLRS_BRANCH: ${{ needs.variables.outputs.DLRS_BRANCH }}
          DLRS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}
          DLRS_TAG: ${{ needs.variables.outputs.DLRS_TAG }} 
          DLRS_NEW_TAG: ${{ steps.versioning.outputs.tag }}

      - if: ${{ failure() }}
        name: Delete Branch
        run: |
          echo "::group::Delete branch"
          echo "Delete branch ${{ env.DLRS_NEW_BRANCH }}"
          git checkout ${{ env.DLRS_BRANCH }}
          git branch -D ${{ env.DLRS_NEW_BRANCH }}
          git push origin --delete ${{ env.DLRS_NEW_BRANCH }} &> /dev/null
          echo "::endgroup::"
        env:
          DLRS_BRANCH: ${{ needs.variables.outputs.DLRS_BRANCH }}
          DLRS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}

      - name: Create Pull Request
        run: |
          echo "::group::Create Pull Request"
          echo "Create Pull Request ${{ env.DLRS_NEW_BRANCH }} to ${{ env.DLRS_BRANCH }}"
          gh pr create --title "[DLRS-CI] - Update version to ${{ env.DLRS_NEW_TAG }}" --body "Update version ${{ env.DLRS_TAG}} to ${{ env.DLRS_NEW_TAG }}" --base ${{ env.DLRS_BRANCH }} --head ${{ env.DLRS_NEW_BRANCH }}
          echo "::endgroup::"
        env:
          DLRS_BRANCH: ${{ needs.variables.outputs.DLRS_BRANCH }}
          DLRS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}
          DLRS_TAG: ${{ needs.variables.outputs.DLRS_TAG }} 
          DLRS_NEW_TAG: ${{ steps.versioning.outputs.tag }}
          GITHUB_TOKEN: ${{ github.token }}