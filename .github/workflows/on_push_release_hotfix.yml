name: On Push [release/*,hotfix/*]
run-name: Publish branch

on:
  workflow_dispatch:

jobs:  
  variables:
    name: Variables
    uses: .github/workflows/variables@main

  build:
    name: Build
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: variables
    env:
      DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
    
    steps:
      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ env.DLRS_ENV_FILE }}
      
      - name: Create buildx builder
        uses: dolorestec/devops/.github/actions/docker/buildx/create@develop
        with:
          name: ${{ env.DLRS_NAME }}
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}

      - name: Login to ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/login@develop
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          token: ${{ env.TOKEN }}
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}

      - name: Build image
        env:
          DLRS_REPOSITORY: ${{ env.DLRS_REPOSITORY }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
        uses: dolorestec/devops/.github/actions/docker/buildx/build@develop
        with:
          image: "ghcr.io/${{ env.DLRS_REPOSITORY }}"
          tag: ${{ env.DLRS_TAG }}
          context: .
          dockerfile: Dockerfile
          push: true


      - name: Logout from ghcr.io
        env:
          REGISTRY: ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/logout@develop
        with:
          registry: ${{ env.REGISTRY }}

  rc:
    name: Release Candidate
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: build
    env:
      DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
    
     
    steps:
      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ env.DLRS_ENV_FILE }}