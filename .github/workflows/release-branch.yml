name: release-branch
run-name: ${{ github.event.commits.message }}

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:
  

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  variables:
    name: Variables
    timeout-minutes: 3
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Create file
        run: |
          echo "::group::Create file"
          touch ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}

      - name: Set variables
        run: |
          echo "::group::Environment Variables"
          echo "DLRS_NAME=${{ github.event.repository.name }}" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_VERSION=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g' | awk -F'-' '{print $1}' | sed 's/[^0-9.]*//g')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_REPOSITORY=${{ github.repository }}">> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_BRANCH=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_TAG=$(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g')" >> ${{env.DLRS_ENV_FILE}}
          echo "DLRS_SUFFIX=$( echo $(cat ${{env.DLRS_VERSION_FILE}} | grep version | awk -F':' '{print $2}' | sed 's/ \|"\|//g') | awk -F'-' '{print $2}')" >> ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
          DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}

      - name: List variables
        run: |
          echo "::group::Create file"
          cat ${{env.DLRS_ENV_FILE}}
          echo "::endgroup::"
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}

      - name: Upload file
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.DLRS_ENV_FILE}}
          path: ${{env.DLRS_ENV_FILE}}
        env:
          DLRS_ENV_FILE: ${{ format('{0}-env.json',github.event.repository.name) }}
  
  build-push:
    name: Build and Push
    needs: variables
    timeout-minutes: 3
    runs-on: ubuntu-latest
       
    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          fetch-depth: 0
              
      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ format('{0}-env.json',github.event.repository.name) }}
                        
      - name: Create buildx builder
        uses: dolorestec/devops/.github/actions/docker/buildx/create@develop
        with:
          name: ${{ env.DLRS_NAME }}
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}
                    
      - name: Login to ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/login@develop
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          token: ${{ env.TOKEN }}
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}
                
      - name: Build image
        uses: dolorestec/devops/.github/actions/docker/buildx/build@develop
        with:
          image: "ghcr.io/${{ env.DLRS_REPOSITORY }}"
          tag: ${{ env.DLRS_TAG }}
          context: .
          dockerfile: Dockerfile
          push: true
        env:
          DLRS_REPOSITORY: ${{ env.DLRS_REPOSITORY }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
                    
      - name: Logout from ghcr.io
        uses: dolorestec/devops/.github/actions/docker/registry/logout@develop
        with:
          registry: ${{ env.REGISTRY }}
        env:
          REGISTRY: ghcr.io

  branch:
    name: Create Branch
    needs: build-push
    timeout-minutes: 3
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
      url: https://github.com/dolorestec

    steps:
      - name: Checkout
        uses: Actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name}}
          fetch-depth: 0

      - name: Load variables
        uses: dolorestec/devops/.github/actions/environment/load@develop
        with:
          env_file: ${{ format('{0}-env.json',github.event.repository.name) }}

      - name: Versioning
        id: versioning
        uses: dolorestec/devops/.github/actions/versions@develop
        with:
          branch: ${{ env.DLRS_BRANCH }}
          tag: ${{ env.DLRS_TAG }}
          version: ${{ env.DLRS_VERSION }}
          major: ${{ env.DLRS_MAJOR }}
          minor: ${{ env.DLRS_MINOR }}
        env:
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
          DLRS_VERSION: ${{  env.DLRS_VERSION }}
          DLRS_MAJOR: ${{ github.ref_name == 'develop' && 'true' || 'false' }}
          DLRS_MINOR: ${{ github.ref_name == 'main' && 'true' || 'false' }}

      - name: Create Branch
        run: |
          echo "::group::Create branch"
          
          git config --global user.email "${{ github.actor }}jpa@gmail.com"
          git config --global user.name ${{ github.actor }}

          echo "Create branch"
          git checkout -b ${{ env.DLRS_NEW_BRANCH }}

          echo "Update version ${{ env.DLRS_TAG}} to ${{ env.DLRS_NEW_TAG }}"
          sed -i "s/${{ env.DLRS_TAG }}/${{ env.DLRS_NEW_TAG }}/g" ${{ env.DLRS_VERSION_FILE }}

          echo "Commit changes"
          git add ${{ env.DLRS_VERSION_FILE }}
          git commit -m "[DLRS-CI] Update version ${{ env.DLRS_TAG}} to ${{ env.DLRS_NEW_TAG }}"

          echo "Push changes"
          git push --set-upstream origin ${{ env.DLRS_NEW_BRANCH }}

          echo "Merge branch ${{ env.DLRS_NEW_BRANCH }} to ${{ env.DLRS_BRANCH }}"
          git checkout ${{ env.DLRS_BRANCH }}
          git merge --no-ff --commit -m "[DLRS-CI] Merge branch ${{ env.DLRS_NEW_BRANCH }} to ${{ env.DLRS_BRANCH }}" --strategy=ort ${{ env.DLRS_NEW_BRANCH }}
          git push origin ${{ env.DLRS_BRANCH }}

          echo "::endgroup::"
        env:
          DLRS_NAME: ${{ env.DLRS_NAME }}
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DLRS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}
          DLRS_TAG: ${{ env.DLRS_TAG }}
          DLRS_NEW_TAG: ${{ steps.versioning.outputs.tag }}
          DLRS_VERSION_FILE: ${{ format('{0}.json',github.event.repository.name) }}
          GITHUB_TOKEN: ${{ github.token }}

      - if: ${{ failure() }}
        name: Delete Branch
        run: |
          echo "::group::Delete branch"
          echo "Delete branch ${{ env.DLRS_NEW_BRANCH }}"
          git checkout ${{ env.DLRS_BRANCH }}
          git branch -D ${{ env.DLRS_NEW_BRANCH }}
          git push origin --delete ${{ env.DLRS_NEW_BRANCH }} &> /dev/null
          echo "::endgroup::"
        env:
          DLRS_BRANCH: ${{ env.DLRS_BRANCH }}
          DLRS_NEW_BRANCH: ${{ steps.versioning.outputs.branch }}